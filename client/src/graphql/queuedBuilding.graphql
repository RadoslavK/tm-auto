fragment CostFragment on Cost {
    resources {
        wood
        clay
        iron
        crop
        total
        freeCrop
    }
    buildingTime
}

mutation ClearQueue($villageId: Int!) {
    clearQueue(villageId: $villageId)
}

mutation EnqueueBuilding($input: EnqueueBuildingInput) {
    enqueueBuilding(input: $input)
}

mutation DequeueBuilding($input: QueuedBuildingManipulationInput) {
    dequeueBuilding(input: $input)
}

mutation DequeueBuildingAtField($input: DequeueBuildingAtFieldInput) {
    dequeueBuildingAtField(input: $input)
}

mutation MoveQueuedBuildingDown($input: QueuedBuildingManipulationInput!) {
    moveQueuedBuildingDown(input: $input)
}

mutation MoveQueuedBuildingUp($input: QueuedBuildingManipulationInput!) {
    moveQueuedBuildingUp(input: $input)
}

query GetQueuedBuildings($villageId: Int!) {
    buildingQueue(villageId: $villageId) {
        buildings {
            canMoveDown
            canMoveUp
            cost {
                ...CostFragment
            }
            level
            name
            type
            queueId
        }
        totalCost {
            ...CostFragment
        }
    }
}
