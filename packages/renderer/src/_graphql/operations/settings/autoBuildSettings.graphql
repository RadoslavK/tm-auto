fragment AutoStorageOptionSettings on AutoStorageOptionSettings {
  allow
  overflowLevel
}

fragment AutoStorageSettings on AutoStorageSettings {
  granary {
    ...AutoStorageOptionSettings
  }
  warehouse {
    ...AutoStorageOptionSettings
  }
  allowFreeSpots
}

fragment AutoBuildSettings on AutoBuildSettings {
  allow
  dualQueue {
    allow
    preference
  }
  coolDown {
    ...CoolDown
  }
  autoCropFields
  minCrop
  autoStorage {
    ...AutoStorageSettings
  }
  useHeroResources
}

query GetAutoBuildSettings($villageId: ID!) {
  autoBuildSettings(villageId: $villageId) {
    ...AutoBuildSettings
  }
}

mutation UpdateAutoBuildSettings(
  $villageId: ID!
  $settings: UpdateAutoBuildSettingsInput!
) {
  updateAutoBuildSettings(villageId: $villageId, settings: $settings) {
    ...AutoBuildSettings
  }
}

mutation ResetAutoBuildSettings($villageId: ID!) {
  resetAutoBuildSettings(villageId: $villageId) {
    ...AutoBuildSettings
  }
}

subscription OnAutoBuildSettingsUpdated($villageId: ID!) {
  autoBuildSettingsUpdated(villageId: $villageId) {
    ...AutoBuildSettings
  }
}
