overwrite: true
watch: true
schema: 'src/server/_graphql/resolvers/**/*.graphql'
documents: 'src/client/renderer/_graphql/operations/*.graphql'
config:
  maybeValue: T | null
generates:
  src/server/_graphql/graphql.type.ts:
    plugins:
      - "typescript"
      - "typescript-resolvers"
    config:
      immutableTypes: true
      avoidOptionals: true
      mapperTypeSuffix: Model
      mappers:
        Resources: "../_models/misc/resources#Resources"
        BuildingInProgress: "../_models/buildings/inProgress/buildingInProgress#BuildingInProgress"
        HeroInformation: "../_models/hero/hero#Hero"
        LogEntry: "../_models/logs/logEntry#LogEntry"
        TextLogEntryContent: "../_models/logs/content/text#TextLogEntryContent"
        AutoBuildLogEntryContent: "../_models/logs/content/autoBuild#AutoBuildLogEntryContent"
        AutoUnitsLogEntryContent: "../_models/logs/content/autoUnits#AutoUnitsLogEntryContent"
  src/client/renderer/_graphql/types/graphql.type.ts:
    plugins:
      - "typescript"
      - "typescript-operations"
    config:
      skipTypename: true
      immutableTypes: true
      avoidOptionals: true
  src/client/renderer/_graphql/types/graphql_modules.d.ts:
    plugins:
      - "typescript-graphql-files-modules"
    config:
      modulePathPrefix: "graphql_operations/"
  src/client/renderer/_graphql/fragmentTypes.json:
    plugins:
      - fragment-matcher