type BuildingLevel {
    actual: Int!
    inProgress: Int!
    queued: Int!
}

type BuildingSpot {
    fieldId: Int!
    level: BuildingLevel!
    type: Int!
}

type QueuedBuilding {
    fieldId: Int!
    type: Int!
    queueIndex: Int!
}

type BuildingInProgress {
    level: Int!
    timer: Int!
    type: Int!
}

extend type Query {
    buildingSpots(villageId: Int!): [BuildingSpot!]!
    buildingsInProgress(villageId: Int!): [BuildingInProgress!]!
    queuedBuildings(villageId: Int!): [QueuedBuilding!]!
}

input ClearQueueInput {
    villageId: Int!
}

input EnqueueBuildingInput {
    fieldId: Int!
    type: Int!
    villageId: Int!
}

input DequeueBuildingInput {
    villageId: Int!
    queueIndex: Int!
}

extend type Mutation {
    clearQueue(input: ClearQueueInput): Boolean!
    dequeueBuilding(input: DequeueBuildingInput): Boolean!
    enqueueBuilding(input: EnqueueBuildingInput): Boolean!
}

type NewBuildingInfo {
    imageLink: String!
    name: String!
    type: Int!
}

extend type Query {
    availableNewBuildings(villageId: Int!): [NewBuildingInfo!]!
}

