type UserAccount {
  id: ID!
  username: String!
  password: String!
  server: String!
}

extend type Query {
  account(id: ID!): UserAccount!
  accounts: [UserAccount!]!
  currentAccount: UserAccount!
  isAccountTaken(account: AccountInput!): Boolean!
  lastSignedAccountId: String
}

input AccountInput {
  username: String!
  password: String!
  server: String!
}

extend type Mutation {
  createAccount(account: AccountInput!): UserAccount!
  updateAccount(id: ID!, account: AccountInput!): UserAccount!
  deleteAccount(id: ID!): UserAccount!
}

extend type Subscription {
  accountsUpdated: [UserAccount!]!
  lastSignedAccountIdUpdated: String
}
