type BuildingInfo {
    maxLevel: Int!
    name: String!
}

type BuildingLevelInfo {
    cost: Resources!
}

type BuildingSpotLevel {
    actual: Int!
    ongoing: Int
    queued: Int
    total: Int!
}

type BuildingSpot {
    fieldId: Int!
    level: BuildingSpotLevel!
    type: Int!
}

type ResourceFields {
    wood: [BuildingSpot!]!
    clay: [BuildingSpot!]!
    iron: [BuildingSpot!]!
    crop: [BuildingSpot!]!
}

type BuildingSpots {
    infrastructure: [BuildingSpot!]!
    resources: ResourceFields!
}

input AvailableNewBuildingsInput {
    fieldId: Int!
    villageId: ID!
}

extend type Query {
    availableNewBuildingsTypes(input: AvailableNewBuildingsInput!): [Int!]!
    buildingInfo(buildingType: Int!): BuildingInfo!
    buildingLevelInfo(buildingType: Int!, level: Int!): BuildingLevelInfo!
    buildingSpots(villageId: ID!): BuildingSpots!
}

extend type Subscription {
    actualBuildingLevelsUpdated(villageId: ID!): Boolean
}
