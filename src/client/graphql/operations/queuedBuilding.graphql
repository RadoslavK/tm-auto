#import "./misc.graphql"

mutation ClearQueue($villageId: Int!) {
    clearQueue(villageId: $villageId)
}

mutation EnqueueBuilding($input: EnqueueBuildingInput!) {
    enqueueBuilding(input: $input)
}

mutation DequeueBuilding($input: QueuedBuildingManipulationInput!) {
    dequeueBuilding(input: $input)
}

mutation DequeueBuildingAtField($input: DequeueBuildingAtFieldInput!) {
    dequeueBuildingAtField(input: $input)
}

mutation MoveQueuedBuildingDown($input: QueuedBuildingManipulationInput!) {
    moveQueuedBuildingDown(input: $input)
}

mutation MoveQueuedBuildingUp($input: QueuedBuildingManipulationInput!) {
    moveQueuedBuildingUp(input: $input)
}

mutation MoveQueuedBuildingToTop($villageId: Int!, $queueId: ID!) {
    moveQueuedBuildingToTop(villageId: $villageId, queueId: $queueId)
}

query GetQueuedBuildings($villageId: Int!) {
    buildingQueue(villageId: $villageId) {
        buildings {
            canMoveDown
            canMoveUp
            cost {
                ...Cost
            }
            name
            level
            type
            queueId
            fieldId
        }
        totalCost {
            ...Cost
        }
    }
}

query CanMoveToTop($villageId: Int!, $queueId: ID!) {
    canMoveToTop(villageId: $villageId, queueId: $queueId)
}

subscription OnQueueUpdated($villageId: Int!) {
    onQueueUpdated(villageId: $villageId)
}
