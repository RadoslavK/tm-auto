#import "./misc.graphql"

fragment TaskSettings on ITaskSettings {
    allow
    coolDown {
        min {
            ...Duration
        }
        max {
            ...Duration
        }
    }
}

fragment AutoUnitsUnitSettings on AutoUnitsUnitSettings {
    autoBuild
    index
    targetAmount
    trainForever
}

fragment AutoUnitsBuildingSettings on AutoUnitsBuildingSettings {
    allow
    maxBuildTime {
        ...Duration
    }
    units {
        ...AutoUnitsUnitSettings
    }
}

fragment GeneralSettings on GeneralSettings {
    allowTasks
    autoBuild
    autoUnits
    autoStart
}

fragment AutoAdventureSettings on AutoAdventureSettings {
    ...TaskSettings
    adventureCriteria
    hardMinHealth
    normalMinHealth
    maxTravelTime {
        ...Duration
    }
    preferHard
    preferredVillageId
}

fragment GeneralVillageSettings on GeneralVillageSettings {
    allowTasks
}

fragment AutoStorageOptionSettings on AutoStorageOptionSettings {
    allow
    overflowLevel
}

fragment AutoStorageSettings on AutoStorageSettings {
    granary {
        ...AutoStorageOptionSettings
    }
    warehouse {
        ...AutoStorageOptionSettings
    }
    allowFreeSpots
}

fragment AutoBuildSettings on AutoBuildSettings {
    ...TaskSettings
    autoCropFields
    minCrop
    autoStorage {
        ...AutoStorageSettings
    }
}

fragment AutoUnitsSettings on AutoUnitsSettings {
    ...TaskSettings
    minCrop
    barracks {
        ...AutoUnitsBuildingSettings
    }
    stable {
        ...AutoUnitsBuildingSettings
    }
    workshop {
        ...AutoUnitsBuildingSettings
    }
    residence {
        ...AutoUnitsBuildingSettings
    }
}

query GetGeneralSettings {
    generalSettings {
        ...GeneralSettings
    }
}

query GetHeroSettings {
    hero {
        autoAdventure {
            ...AutoAdventureSettings
        }
    }
}

query GetGeneralVillageSettings($villageId: Int!) {
    generalVillageSettings(villageId: $villageId) {
        ...GeneralVillageSettings
    }
}

query GetAutoBuildSettings($villageId: Int!) {
    autoBuildSettings(villageId: $villageId) {
        ...AutoBuildSettings
    }
}

query GetAutoUnitsSettings($villageId: Int!) {
    autoUnitsSettings(villageId: $villageId) {
        ...AutoUnitsSettings
    }
}

mutation UpdateGeneralSettings($settings: UpdateGeneralSettingsInput!) {
    updateGeneralSettings(settings: $settings)
}

mutation UpdateAutoAdventureSettings($settings: UpdateAutoAdventureSettingsInput!) {
    updateAutoAdventureSettings(settings: $settings)
}

mutation UpdateGeneralVillageSettings($settings: UpdateGeneralVillageSettingsInput!) {
    updateGeneralVillageSettings(settings: $settings)
}

mutation UpdateAutoBuildVillageSettings($settings: UpdateAutoBuildVillageSettingsInput!) {
    updateAutoBuildVillageSettings(settings: $settings)
}

mutation UpdateAutoUnitsUnitSettings($settings: UpdateAutoUnitsUnitSettingsInput!) {
    updateAutoUnitsUnitSettings(settings: $settings)
}

mutation UpdateAutoUnitsBuildingSettings($settings: UpdateAutoUnitsBuildingSettingsInput!) {
    updateAutoUnitsBuildingSettings(settings: $settings)
}

mutation UpdateAutoUnitsSettings($settings: UpdateAutoUnitsSettingsInput!) {
    updateAutoUnitsSettings(settings: $settings)
}

mutation ResetSettings($type: SettingsType!) {
    resetSettings(type: $type)
}

mutation ResetVillageSettings($villageId: Int!, $type: VillageSettingsType!) {
    resetVillageSettings(villageId: $villageId, type: $type)
}

subscription OnGeneralSettingsChanged {
    generalSettingsChanged {
        ...GeneralSettings
    }
}

subscription OnAutoAdventureSettingsChanged {
    autoAdventureSettingsChanged {
        ...AutoAdventureSettings
    }
}

subscription OnGeneralVillageSettingsChanged($villageId: Int!) {
    generalVillageSettingsChanged(villageId: $villageId) {
        ...GeneralVillageSettings
    }
}

subscription OnAutoBuildSettingsChanged($villageId: Int!) {
    autoBuildSettingsChanged(villageId: $villageId) {
        ...AutoBuildSettings
    }
}

subscription OnAutoUnitsSettingsChange($villageId: Int!) {
    autoUnitsSettingsChanged(villageId: $villageId) {
        ...AutoUnitsSettings
    }
}
