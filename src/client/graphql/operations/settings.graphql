fragment TaskSettingsFragment on ITaskSettings {
    allow
    coolDown {
        min
        max
    }
}

fragment AutoUnitsUnitSettingsFragment on AutoUnitsUnitSettings {
    autoBuild
    index
    targetAmount
    trainForever
}

fragment AutoUnitsBuildingSettingsFragment on AutoUnitsBuildingSettings {
    allow
    maxBuildTime
    units {
        ...AutoUnitsUnitSettingsFragment
    }
}

query GetGeneralSettings {
    generalSettings {
        allowTasks
        autoBuild
        autoUnits
    }
}

query GetHeroSettings {
    hero {
        autoAdventure {
            ...TaskSettingsFragment
            adventureCriteria
            hardMinHealth
            normalMinHealth
            maxTravelTime
            preferHard
            preferredVillageId
        }
    }
}

query GetVillageSettings($villageId: Int!) {
    villageSettings(villageId: $villageId) {
        general {
            allowTasks
        }
        autoBuild {
            ...TaskSettingsFragment
            autoCropFields
            minCrop
        }
        autoUnits {
            ...TaskSettingsFragment,
            minCrop
        }
    }
}

query GetAutoUnitsSettings($villageId: Int!) {
    autoUnitsSettings(villageId: $villageId) {
        ...TaskSettingsFragment
        minCrop
        barracks {
            ...AutoUnitsBuildingSettingsFragment
        }
        stable {
            ...AutoUnitsBuildingSettingsFragment
        }
        workshop {
            ...AutoUnitsBuildingSettingsFragment
        }
        residence {
            ...AutoUnitsBuildingSettingsFragment
        }
    }
}

mutation UpdateGeneralSettings($input: UpdateGeneralSettingsInput!) {
    updateGeneralSettings(input: $input)
}

mutation UpdateAutoAdventureSettings($input: UpdateAutoAdventureSettingsInput!) {
    updateAutoAdventureSettings(input: $input)
}

mutation UpdateGeneralVillageSettings($input: UpdateGeneralVillageSettingsInput!) {
    updateGeneralVillageSettings(input: $input)
}

mutation UpdateAutoBuildVillageSettings($input: UpdateAutoBuildVillageSettingsInput!) {
    updateAutoBuildVillageSettings(input: $input)
}

mutation UpdateAutoUnitsUnitSettings($input: UpdateAutoUnitsUnitSettingsInput!) {
    updateAutoUnitsUnitSettings(input: $input)
}

mutation UpdateAutoUnitsBuildingSettings($input: UpdateAutoUnitsBuildingSettingsInput!) {
    updateAutoUnitsBuildingSettings(input: $input)
}

mutation UpdateAutoUnitsSettings($input: UpdateAutoUnitsSettingsInput!) {
    updateAutoUnitsSettings(input: $input)
}