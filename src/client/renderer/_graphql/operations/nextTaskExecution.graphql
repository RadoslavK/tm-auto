#import "./misc.graphql"

query NextTaskExecution($task: TaskType!) {
    nextTaskExecution(task: $task) {
        ...Timestamp
    }
}

query NextVillageTaskExecution($villageId: Int!, $task: VillageTaskType!) {
    nextVillageTaskExecution(villageId: $villageId, task: $task) {
        ...Timestamp
    }
}

query NextTasksExecution {
    nextTasksExecution {
        ...Timestamp
    }
}

mutation SetNextTaskExecution($task: TaskType!, $delay: DurationInput!) {
    setNextTaskExecution(task: $task, delay: $delay)
}

mutation SetNextVillageTaskExecution($villageId: Int!, $task: VillageTaskType!, $delay: DurationInput!) {
    setNextVillageTaskExecution(villageId: $villageId, task: $task, delay: $delay)
}

mutation ResetNextTaskExecution($task: TaskType!) {
    resetNextTaskExecution(task: $task)
}

mutation ResetNextVillageTaskExecution($villageId: Int!, $task: VillageTaskType!) {
    resetNextVillageTaskExecution(villageId: $villageId, task: $task)
}

subscription NextTasksExecutionChanged {
    nextTasksExecutionChanged {
        ...Timestamp
    }
}

subscription NextTaskExecutionChanged($task: TaskType!) {
    nextTaskExecutionChanged(task: $task) {
        ...Timestamp
    }
}

subscription NextVillageTaskExecutionChanged($villageId: Int!, $task: VillageTaskType!) {
    nextVillageTaskExecutionChanged(villageId: $villageId, task: $task) {
        ...Timestamp
    }
}
